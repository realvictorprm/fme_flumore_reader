// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by Embeddinator-4000.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#pragma once

#include "glib.h"
#include "mono_embeddinator.h"
#include "c-support.h"
#include "mscorlib.h"
#include "System.h"

MONO_EMBEDDINATOR_BEGIN_DECLS

typedef MonoEmbedArray _DataTableFLUMOREArray;
typedef MonoEmbedArray _FooArray;
typedef MonoEmbedArray _DataRowFLUMOREArray;
typedef MonoEmbedArray _SystemTuple7SystemInt32mscorlibVersion4000CultureneutralPublicKeyTokenb77a5c561934e089SystemDoublemscorlibVersion4000CultureneutralPublicKeyTokenb77a5c561934e089SystemDoublemscorlibVersion4000CultureneutralPublicKeyTokenb77a5c561934e089SystemDoublemscorlibVersion4000CultureneutralPublicKeyTokenb77a5c561934e089SystemDoublemscorlibVersion4000CultureneutralPublicKeyTokenb77a5c561934e089SystemDoublemscorlibVersion4000CultureneutralPublicKeyTokenb77a5c561934e089SystemDoublemscorlibVersion4000CultureneutralPublicKeyTokenb77a5c561934e089Array;
typedef MonoEmbedObject NOTHING;
typedef MonoEmbedObject Parser;
typedef MonoEmbedObject DataTableFLUMORE;
typedef MonoEmbedObject DataRowFLUMORE;
typedef MonoEmbedObject Foo;
typedef MonoEmbedObject TimestampPaket;
typedef MonoEmbedObject TimestampIdentifier;
typedef MonoEmbedObject TimestampKind;
typedef MonoEmbedObject SituationIdentifier;
typedef MonoEmbedObject Deichueberstroemung;
typedef MonoEmbedObject Deichbresche;
typedef MonoEmbedObject Patterns;
typedef MonoEmbedObject Definitions;
typedef MonoEmbedObject SimulationKind;
typedef MonoEmbedObject Tags;
typedef MonoEmbedObject FileIdentifier;
typedef MonoEmbedObject PackageIdentifier;
typedef MonoEmbedObject TimestampSubDataIdentifier;
typedef MonoEmbedObject Ueberstr;
typedef MonoEmbedObject Bresche;
typedef MonoEmbedObject Deichentl;
typedef MonoEmbedObject Folgebruch;
typedef MonoEmbedObject InnereEntl;
typedef MonoEmbedObject LinienSM;
typedef MonoEmbedObject PunktSM;
typedef MonoEmbedObject Context;
typedef MonoEmbedObject TimestampSpan;
typedef MonoEmbedObject Subspan;
typedef MonoEmbedObject AST;
typedef MonoEmbedObject Header;
typedef MonoEmbedObject TimestampHeader;
typedef MonoEmbedObject TimestampSubHeader;
typedef MonoEmbedObject TimestampSubData;
typedef MonoEmbedObject ParserResult;
typedef MonoEmbedObject Utils;
typedef MonoEmbedObject MaybeBuilder;
typedef MonoEmbedObject DateTime;
typedef MonoEmbedObject Result;
typedef MonoEmbedObject File;
typedef MonoEmbedObject String;
typedef MonoEmbedObject Match;
typedef MonoEmbedObject Capture;
typedef MonoEmbedObject Regex;
typedef MonoEmbedObject Convert;
typedef MonoEmbedObject Option;
typedef MonoEmbedObject ActivePatterns;

MONO_EMBEDDINATOR_API void Parser_testUnicodeNameaeae();
MONO_EMBEDDINATOR_API _DataTableFLUMOREArray Parser_getSimulationFileData(const char* path);
MONO_EMBEDDINATOR_API _Int32Array Parser_test();
MONO_EMBEDDINATOR_API _FooArray Parser_foo();

MONO_EMBEDDINATOR_API DataTableFLUMORE* DataTableFLUMORE_NewTable(_DataRowFLUMOREArray _data, const char* _time);
MONO_EMBEDDINATOR_API _DataRowFLUMOREArray DataTableFLUMORE_get_data(DataTableFLUMORE* object);
MONO_EMBEDDINATOR_API const char* DataTableFLUMORE_get_time(DataTableFLUMORE* object);
MONO_EMBEDDINATOR_API int32_t DataTableFLUMORE_get_Tag(DataTableFLUMORE* object);
MONO_EMBEDDINATOR_API const char* DataTableFLUMORE_ToString(DataTableFLUMORE* object);
MONO_EMBEDDINATOR_API int32_t DataTableFLUMORE_CompareTo(DataTableFLUMORE* object, DataTableFLUMORE* obj);
MONO_EMBEDDINATOR_API bool DataTableFLUMORE_Equals_1(DataTableFLUMORE* object, DataTableFLUMORE* obj);

MONO_EMBEDDINATOR_API DataRowFLUMORE* DataRowFLUMORE_new(int32_t id, double x, double y, double z, double wsp, double h, double vres);
MONO_EMBEDDINATOR_API int32_t DataRowFLUMORE_get_id(DataRowFLUMORE* object);
MONO_EMBEDDINATOR_API double DataRowFLUMORE_get_x(DataRowFLUMORE* object);
MONO_EMBEDDINATOR_API double DataRowFLUMORE_get_y(DataRowFLUMORE* object);
MONO_EMBEDDINATOR_API double DataRowFLUMORE_get_z(DataRowFLUMORE* object);
MONO_EMBEDDINATOR_API double DataRowFLUMORE_get_wsp(DataRowFLUMORE* object);
MONO_EMBEDDINATOR_API double DataRowFLUMORE_get_h(DataRowFLUMORE* object);
MONO_EMBEDDINATOR_API double DataRowFLUMORE_get_vres(DataRowFLUMORE* object);
MONO_EMBEDDINATOR_API const char* DataRowFLUMORE_ToString(DataRowFLUMORE* object);
MONO_EMBEDDINATOR_API int32_t DataRowFLUMORE_CompareTo(DataRowFLUMORE* object, DataRowFLUMORE* obj);
MONO_EMBEDDINATOR_API DataRowFLUMORE* DataRowFLUMORE_get_Invalid();
MONO_EMBEDDINATOR_API bool DataRowFLUMORE_Equals_1(DataRowFLUMORE* object, DataRowFLUMORE* obj);

MONO_EMBEDDINATOR_API Foo* Foo_NewBar(int32_t item);
MONO_EMBEDDINATOR_API int32_t Foo_get_Item(Foo* object);
MONO_EMBEDDINATOR_API int32_t Foo_get_Tag(Foo* object);
MONO_EMBEDDINATOR_API const char* Foo_ToString(Foo* object);
MONO_EMBEDDINATOR_API int32_t Foo_CompareTo(Foo* object, Foo* obj);
MONO_EMBEDDINATOR_API bool Foo_Equals_1(Foo* object, Foo* obj);

MONO_EMBEDDINATOR_API TimestampIdentifier* TimestampPaket_get_Identifier(TimestampPaket* object);
MONO_EMBEDDINATOR_API SituationIdentifier* TimestampPaket_get_Kind(TimestampPaket* object);
MONO_EMBEDDINATOR_API const char* TimestampPaket_ToString(TimestampPaket* object);
MONO_EMBEDDINATOR_API int32_t TimestampPaket_CompareTo(TimestampPaket* object, TimestampPaket* obj);
MONO_EMBEDDINATOR_API bool TimestampPaket_Equals_1(TimestampPaket* object, TimestampPaket* obj);

MONO_EMBEDDINATOR_API TimestampKind* TimestampIdentifier_get_Kind(TimestampIdentifier* object);
MONO_EMBEDDINATOR_API int32_t TimestampIdentifier_get_SubSpanCount(TimestampIdentifier* object);
MONO_EMBEDDINATOR_API int32_t TimestampIdentifier_get__2DCount(TimestampIdentifier* object);
MONO_EMBEDDINATOR_API int32_t TimestampIdentifier_get_Tag(TimestampIdentifier* object);
MONO_EMBEDDINATOR_API const char* TimestampIdentifier_ToString(TimestampIdentifier* object);
MONO_EMBEDDINATOR_API int32_t TimestampIdentifier_CompareTo(TimestampIdentifier* object, TimestampIdentifier* obj);
MONO_EMBEDDINATOR_API bool TimestampIdentifier_Equals_1(TimestampIdentifier* object, TimestampIdentifier* obj);

MONO_EMBEDDINATOR_API TimestampKind* TimestampKind_get_Simulation();
MONO_EMBEDDINATOR_API bool TimestampKind_get_IsSimulation(TimestampKind* object);
MONO_EMBEDDINATOR_API TimestampKind* TimestampKind_get_Prediction();
MONO_EMBEDDINATOR_API bool TimestampKind_get_IsPrediction(TimestampKind* object);
MONO_EMBEDDINATOR_API TimestampKind* TimestampKind_get_Scenario();
MONO_EMBEDDINATOR_API bool TimestampKind_get_IsScenario(TimestampKind* object);
MONO_EMBEDDINATOR_API int32_t TimestampKind_get_Tag(TimestampKind* object);
MONO_EMBEDDINATOR_API const char* TimestampKind_ToString(TimestampKind* object);
MONO_EMBEDDINATOR_API int32_t TimestampKind_CompareTo(TimestampKind* object, TimestampKind* obj);
MONO_EMBEDDINATOR_API bool TimestampKind_Equals_1(TimestampKind* object, TimestampKind* obj);

MONO_EMBEDDINATOR_API SituationIdentifier* SituationIdentifier_NewUeberstr(Deichueberstroemung* item);
MONO_EMBEDDINATOR_API bool SituationIdentifier_get_IsUeberstr(SituationIdentifier* object);
MONO_EMBEDDINATOR_API SituationIdentifier* SituationIdentifier_NewBresche(double _rw, double _hw, Deichbresche* item3);
MONO_EMBEDDINATOR_API bool SituationIdentifier_get_IsBresche(SituationIdentifier* object);
MONO_EMBEDDINATOR_API SituationIdentifier* SituationIdentifier_NewDeichentl(double _rw, double _hw, Deichbresche* item3);
MONO_EMBEDDINATOR_API bool SituationIdentifier_get_IsDeichentl(SituationIdentifier* object);
MONO_EMBEDDINATOR_API SituationIdentifier* SituationIdentifier_NewFolgebruch(double _rw, double _hw, Deichbresche* item3);
MONO_EMBEDDINATOR_API bool SituationIdentifier_get_IsFolgebruch(SituationIdentifier* object);
MONO_EMBEDDINATOR_API SituationIdentifier* SituationIdentifier_NewInnereEntl(double _rw, double _hw, Deichbresche* item3);
MONO_EMBEDDINATOR_API bool SituationIdentifier_get_IsInnereEntl(SituationIdentifier* object);
MONO_EMBEDDINATOR_API SituationIdentifier* SituationIdentifier_NewLinienSM(double _minkrh);
MONO_EMBEDDINATOR_API bool SituationIdentifier_get_IsLinienSM(SituationIdentifier* object);
MONO_EMBEDDINATOR_API SituationIdentifier* SituationIdentifier_NewPunktSM(double _rw, double _hw, double _maxsh);
MONO_EMBEDDINATOR_API bool SituationIdentifier_get_IsPunktSM(SituationIdentifier* object);
MONO_EMBEDDINATOR_API int32_t SituationIdentifier_get_Tag(SituationIdentifier* object);
MONO_EMBEDDINATOR_API const char* SituationIdentifier_ToString(SituationIdentifier* object);
MONO_EMBEDDINATOR_API int32_t SituationIdentifier_CompareTo(SituationIdentifier* object, SituationIdentifier* obj);
MONO_EMBEDDINATOR_API bool SituationIdentifier_Equals_1(SituationIdentifier* object, SituationIdentifier* obj);

MONO_EMBEDDINATOR_API Deichueberstroemung* Deichueberstroemung_NewDeichueberstroemung(double _hm, double _q);
MONO_EMBEDDINATOR_API double Deichueberstroemung_get_hm(Deichueberstroemung* object);
MONO_EMBEDDINATOR_API double Deichueberstroemung_get_q(Deichueberstroemung* object);
MONO_EMBEDDINATOR_API int32_t Deichueberstroemung_get_Tag(Deichueberstroemung* object);
MONO_EMBEDDINATOR_API const char* Deichueberstroemung_ToString(Deichueberstroemung* object);
MONO_EMBEDDINATOR_API int32_t Deichueberstroemung_CompareTo(Deichueberstroemung* object, Deichueberstroemung* obj);
MONO_EMBEDDINATOR_API bool Deichueberstroemung_Equals_1(Deichueberstroemung* object, Deichueberstroemung* obj);

MONO_EMBEDDINATOR_API Deichbresche* Deichbresche_NewDeichbresche(double _bb, double _btm, double _q);
MONO_EMBEDDINATOR_API double Deichbresche_get_bb(Deichbresche* object);
MONO_EMBEDDINATOR_API double Deichbresche_get_btm(Deichbresche* object);
MONO_EMBEDDINATOR_API double Deichbresche_get_q(Deichbresche* object);
MONO_EMBEDDINATOR_API int32_t Deichbresche_get_Tag(Deichbresche* object);
MONO_EMBEDDINATOR_API const char* Deichbresche_ToString(Deichbresche* object);
MONO_EMBEDDINATOR_API int32_t Deichbresche_CompareTo(Deichbresche* object, Deichbresche* obj);
MONO_EMBEDDINATOR_API bool Deichbresche_Equals_1(Deichbresche* object, Deichbresche* obj);

MONO_EMBEDDINATOR_API const char* Patterns_get_patternDate();
MONO_EMBEDDINATOR_API void Patterns_set_patternDate(const char* value);
MONO_EMBEDDINATOR_API const char* Patterns_get_patternIdentification();
MONO_EMBEDDINATOR_API void Patterns_set_patternIdentification(const char* value);
MONO_EMBEDDINATOR_API const char* Patterns_get_patternTimesteps();
MONO_EMBEDDINATOR_API void Patterns_set_patternTimesteps(const char* value);
MONO_EMBEDDINATOR_API const char* Patterns_get_patternFileDate();
MONO_EMBEDDINATOR_API void Patterns_set_patternFileDate(const char* value);
MONO_EMBEDDINATOR_API const char* Patterns_get_patternFilenameComplete();
MONO_EMBEDDINATOR_API void Patterns_set_patternFilenameComplete(const char* value);
MONO_EMBEDDINATOR_API const char* Patterns_get_patternFirstLineIdentifier();
MONO_EMBEDDINATOR_API void Patterns_set_patternFirstLineIdentifier(const char* value);
MONO_EMBEDDINATOR_API const char* Patterns_get_patternTimestampIdentifier();
MONO_EMBEDDINATOR_API void Patterns_set_patternTimestampIdentifier(const char* value);
MONO_EMBEDDINATOR_API const char* Patterns_get_patternSubSpanIdentifier();
MONO_EMBEDDINATOR_API void Patterns_set_patternSubSpanIdentifier(const char* value);
MONO_EMBEDDINATOR_API const char* Patterns_get_patternSubDataIdentifier();
MONO_EMBEDDINATOR_API void Patterns_set_patternSubDataIdentifier(const char* value);
MONO_EMBEDDINATOR_API const char* Patterns_get_patternRowCSV();
MONO_EMBEDDINATOR_API void Patterns_set_patternRowCSV(const char* value);

MONO_EMBEDDINATOR_API SimulationKind* SimulationKind_get_Prediction();
MONO_EMBEDDINATOR_API bool SimulationKind_get_IsPrediction(SimulationKind* object);
MONO_EMBEDDINATOR_API SimulationKind* SimulationKind_get_Scenario();
MONO_EMBEDDINATOR_API bool SimulationKind_get_IsScenario(SimulationKind* object);
MONO_EMBEDDINATOR_API int32_t SimulationKind_get_Tag(SimulationKind* object);
MONO_EMBEDDINATOR_API const char* SimulationKind_ToString(SimulationKind* object);
MONO_EMBEDDINATOR_API int32_t SimulationKind_CompareTo(SimulationKind* object, SimulationKind* obj);
MONO_EMBEDDINATOR_API bool SimulationKind_Equals_1(SimulationKind* object, SimulationKind* obj);

MONO_EMBEDDINATOR_API int32_t Tags_get_Prediction();
MONO_EMBEDDINATOR_API void Tags_set_Prediction(int32_t value);
MONO_EMBEDDINATOR_API int32_t Tags_get_Scenario();
MONO_EMBEDDINATOR_API void Tags_set_Scenario(int32_t value);

MONO_EMBEDDINATOR_API SimulationKind* FileIdentifier_get_Kind(FileIdentifier* object);
MONO_EMBEDDINATOR_API int32_t FileIdentifier_get_Variant(FileIdentifier* object);
MONO_EMBEDDINATOR_API int32_t FileIdentifier_get_Counter(FileIdentifier* object);
MONO_EMBEDDINATOR_API int32_t FileIdentifier_get_Tag(FileIdentifier* object);
MONO_EMBEDDINATOR_API const char* FileIdentifier_ToString(FileIdentifier* object);
MONO_EMBEDDINATOR_API int32_t FileIdentifier_CompareTo(FileIdentifier* object, FileIdentifier* obj);
MONO_EMBEDDINATOR_API bool FileIdentifier_Equals_1(FileIdentifier* object, FileIdentifier* obj);

MONO_EMBEDDINATOR_API int32_t PackageIdentifier_get_Timesteps(PackageIdentifier* object);
MONO_EMBEDDINATOR_API int32_t PackageIdentifier_get_Variant(PackageIdentifier* object);
MONO_EMBEDDINATOR_API int32_t PackageIdentifier_get_Counter(PackageIdentifier* object);
MONO_EMBEDDINATOR_API int32_t PackageIdentifier_get_From(PackageIdentifier* object);
MONO_EMBEDDINATOR_API int32_t PackageIdentifier_get_To(PackageIdentifier* object);
MONO_EMBEDDINATOR_API int32_t PackageIdentifier_get_Tag(PackageIdentifier* object);
MONO_EMBEDDINATOR_API const char* PackageIdentifier_ToString(PackageIdentifier* object);
MONO_EMBEDDINATOR_API int32_t PackageIdentifier_CompareTo(PackageIdentifier* object, PackageIdentifier* obj);
MONO_EMBEDDINATOR_API bool PackageIdentifier_Equals_1(PackageIdentifier* object, PackageIdentifier* obj);

MONO_EMBEDDINATOR_API TimestampSubDataIdentifier* TimestampSubDataIdentifier_NewTimestampSubDataIdentifier(int32_t count, int32_t iD, int32_t version);
MONO_EMBEDDINATOR_API int32_t TimestampSubDataIdentifier_get_Count(TimestampSubDataIdentifier* object);
MONO_EMBEDDINATOR_API int32_t TimestampSubDataIdentifier_get_ID(TimestampSubDataIdentifier* object);
MONO_EMBEDDINATOR_API int32_t TimestampSubDataIdentifier_get_Version(TimestampSubDataIdentifier* object);
MONO_EMBEDDINATOR_API int32_t TimestampSubDataIdentifier_get_Tag(TimestampSubDataIdentifier* object);
MONO_EMBEDDINATOR_API const char* TimestampSubDataIdentifier_ToString(TimestampSubDataIdentifier* object);
MONO_EMBEDDINATOR_API int32_t TimestampSubDataIdentifier_CompareTo(TimestampSubDataIdentifier* object, TimestampSubDataIdentifier* obj);
MONO_EMBEDDINATOR_API bool TimestampSubDataIdentifier_Equals_1(TimestampSubDataIdentifier* object, TimestampSubDataIdentifier* obj);

MONO_EMBEDDINATOR_API Deichueberstroemung* Ueberstr_get_Item(Ueberstr* object);

MONO_EMBEDDINATOR_API double Bresche_get_rw(Bresche* object);
MONO_EMBEDDINATOR_API double Bresche_get_hw(Bresche* object);
MONO_EMBEDDINATOR_API Deichbresche* Bresche_get_Item3(Bresche* object);

MONO_EMBEDDINATOR_API double Deichentl_get_rw(Deichentl* object);
MONO_EMBEDDINATOR_API double Deichentl_get_hw(Deichentl* object);
MONO_EMBEDDINATOR_API Deichbresche* Deichentl_get_Item3(Deichentl* object);

MONO_EMBEDDINATOR_API double Folgebruch_get_rw(Folgebruch* object);
MONO_EMBEDDINATOR_API double Folgebruch_get_hw(Folgebruch* object);
MONO_EMBEDDINATOR_API Deichbresche* Folgebruch_get_Item3(Folgebruch* object);

MONO_EMBEDDINATOR_API double InnereEntl_get_rw(InnereEntl* object);
MONO_EMBEDDINATOR_API double InnereEntl_get_hw(InnereEntl* object);
MONO_EMBEDDINATOR_API Deichbresche* InnereEntl_get_Item3(InnereEntl* object);

MONO_EMBEDDINATOR_API double LinienSM_get_minkrh(LinienSM* object);

MONO_EMBEDDINATOR_API double PunktSM_get_rw(PunktSM* object);
MONO_EMBEDDINATOR_API double PunktSM_get_hw(PunktSM* object);
MONO_EMBEDDINATOR_API double PunktSM_get_maxsh(PunktSM* object);

MONO_EMBEDDINATOR_API Context* Context_get_Unattached();
MONO_EMBEDDINATOR_API bool Context_get_IsUnattached(Context* object);
MONO_EMBEDDINATOR_API Context* Context_NewTimestampSpan(TimestampIdentifier* item);
MONO_EMBEDDINATOR_API bool Context_get_IsTimestampSpan(Context* object);
MONO_EMBEDDINATOR_API Context* Context_NewSubspan(SituationIdentifier* item);
MONO_EMBEDDINATOR_API bool Context_get_IsSubspan(Context* object);
MONO_EMBEDDINATOR_API int32_t Context_get_Tag(Context* object);
MONO_EMBEDDINATOR_API const char* Context_ToString(Context* object);
MONO_EMBEDDINATOR_API int32_t Context_CompareTo(Context* object, Context* obj);
MONO_EMBEDDINATOR_API bool Context_Equals_1(Context* object, Context* obj);

MONO_EMBEDDINATOR_API TimestampIdentifier* TimestampSpan_get_Item(TimestampSpan* object);

MONO_EMBEDDINATOR_API SituationIdentifier* Subspan_get_Item(Subspan* object);

MONO_EMBEDDINATOR_API AST* AST_NewHeader(PackageIdentifier* item);
MONO_EMBEDDINATOR_API bool AST_get_IsHeader(AST* object);
MONO_EMBEDDINATOR_API AST* AST_NewTimestampHeader(TimestampIdentifier* item1, int32_t at);
MONO_EMBEDDINATOR_API bool AST_get_IsTimestampHeader(AST* object);
MONO_EMBEDDINATOR_API AST* AST_NewTimestampSubHeader(AST* context, SituationIdentifier* item2, int32_t from, int32_t to);
MONO_EMBEDDINATOR_API bool AST_get_IsTimestampSubHeader(AST* object);
MONO_EMBEDDINATOR_API AST* AST_NewTimestampSubData(AST* context, TimestampSubDataIdentifier* item2, int32_t from, int32_t to);
MONO_EMBEDDINATOR_API bool AST_get_IsTimestampSubData(AST* object);
MONO_EMBEDDINATOR_API AST* AST_get_Detached();
MONO_EMBEDDINATOR_API bool AST_get_IsDetached(AST* object);
MONO_EMBEDDINATOR_API int32_t AST_get_Tag(AST* object);
MONO_EMBEDDINATOR_API const char* AST_ToString(AST* object);
MONO_EMBEDDINATOR_API int32_t AST_CompareTo(AST* object, AST* obj);
MONO_EMBEDDINATOR_API bool AST_Equals_1(AST* object, AST* obj);

MONO_EMBEDDINATOR_API PackageIdentifier* Header_get_Item(Header* object);

MONO_EMBEDDINATOR_API TimestampIdentifier* TimestampHeader_get_Item1(TimestampHeader* object);
MONO_EMBEDDINATOR_API int32_t TimestampHeader_get_At(TimestampHeader* object);

MONO_EMBEDDINATOR_API AST* TimestampSubHeader_get_Context(TimestampSubHeader* object);
MONO_EMBEDDINATOR_API SituationIdentifier* TimestampSubHeader_get_Item2(TimestampSubHeader* object);
MONO_EMBEDDINATOR_API int32_t TimestampSubHeader_get_From(TimestampSubHeader* object);
MONO_EMBEDDINATOR_API int32_t TimestampSubHeader_get_To(TimestampSubHeader* object);

MONO_EMBEDDINATOR_API AST* TimestampSubData_get_Context(TimestampSubData* object);
MONO_EMBEDDINATOR_API TimestampSubDataIdentifier* TimestampSubData_get_Item2(TimestampSubData* object);
MONO_EMBEDDINATOR_API int32_t TimestampSubData_get_From(TimestampSubData* object);
MONO_EMBEDDINATOR_API int32_t TimestampSubData_get_To(TimestampSubData* object);

MONO_EMBEDDINATOR_API _StringArray ParserResult_get_AllLines(ParserResult* object);
MONO_EMBEDDINATOR_API const char* ParserResult_ToString(ParserResult* object);
MONO_EMBEDDINATOR_API int32_t ParserResult_CompareTo(ParserResult* object, ParserResult* obj);
MONO_EMBEDDINATOR_API bool ParserResult_Equals_1(ParserResult* object, ParserResult* obj);

MONO_EMBEDDINATOR_API MaybeBuilder* Utils_get_maybe();

MONO_EMBEDDINATOR_API MaybeBuilder* MaybeBuilder_new();

MONO_EMBEDDINATOR_API const char* String_replaceString(const char* oldValue, const char* newValue, const char* input);
MONO_EMBEDDINATOR_API const char* String_replaceChar(gunichar2 oldChar, gunichar2 newChar, const char* input);

MONO_EMBEDDINATOR_API bool Regex_isMatch(const char* pattern, const char* input);
MONO_EMBEDDINATOR_API _StringArray Regex_Split(const char* pattern, const char* input);
MONO_EMBEDDINATOR_API const char* Regex_Replace(const char* pattern, const char* replacement, const char* input);

MONO_EMBEDDINATOR_END_DECLS
